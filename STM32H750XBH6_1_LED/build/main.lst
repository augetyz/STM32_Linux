ARM GAS  /tmp/cc7OF7aT.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"main.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.Error_Handler,"ax",%progbits
  17              		.align	1
  18              		.global	Error_Handler
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	Error_Handler:
  26              	.LFB146:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "gpio.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/cc7OF7aT.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****  * @brief  The application entry point.
  62:Core/Src/main.c ****  * @retval int
  63:Core/Src/main.c ****  */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  73:Core/Src/main.c ****   HAL_Init();
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Configure the system clock */
  80:Core/Src/main.c ****   SystemClock_Config();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Initialize all configured peripherals */
  87:Core/Src/main.c ****   MX_GPIO_Init();
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/cc7OF7aT.s 			page 3


  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  94:Core/Src/main.c ****   while (1)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     /* USER CODE END WHILE */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  99:Core/Src/main.c ****     GPIOC->ODR ^= GPIO_PIN_15;
 100:Core/Src/main.c ****     HAL_Delay(100);
 101:Core/Src/main.c ****     GPIOI->ODR ^= GPIO_PIN_8;
 102:Core/Src/main.c ****     HAL_Delay(100);
 103:Core/Src/main.c ****   }
 104:Core/Src/main.c ****   /* USER CODE END 3 */
 105:Core/Src/main.c **** }
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /**
 108:Core/Src/main.c ****  * @brief System Clock Configuration
 109:Core/Src/main.c ****  * @retval None
 110:Core/Src/main.c ****  */
 111:Core/Src/main.c **** void SystemClock_Config(void)
 112:Core/Src/main.c **** {
 113:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 114:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /** Supply configuration update enable
 117:Core/Src/main.c ****    */
 118:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 121:Core/Src/main.c ****    */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   while (!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY))
 124:Core/Src/main.c ****   {
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 128:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 129:Core/Src/main.c ****    */
 130:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
ARM GAS  /tmp/cc7OF7aT.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 148:Core/Src/main.c ****    */
 149:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 150:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** }
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /* USER CODE END 4 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 170:Core/Src/main.c ****  * @retval None
 171:Core/Src/main.c ****  */
 172:Core/Src/main.c **** void Error_Handler(void)
 173:Core/Src/main.c **** {
  28              		.loc 1 173 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 174:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 175:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 176:Core/Src/main.c ****   __disable_irq();
  34              		.loc 1 176 3 view .LVU1
  35              	.LBB4:
  36              	.LBI4:
  37              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  /tmp/cc7OF7aT.s 			page 5


  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/cc7OF7aT.s 			page 6


  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc7OF7aT.s 			page 7


 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  /tmp/cc7OF7aT.s 			page 8


 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  38              		.loc 2 207 27 view .LVU2
  39              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  40              		.loc 2 209 3 view .LVU3
  41              		.syntax unified
  42              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  43 0000 72B6     		cpsid i
  44              	@ 0 "" 2
  45              		.thumb
  46              		.syntax unified
  47              	.L2:
  48              	.LBE5:
  49              	.LBE4:
 177:Core/Src/main.c ****   while (1)
  50              		.loc 1 177 3 discriminator 1 view .LVU4
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****   }
  51              		.loc 1 179 3 discriminator 1 view .LVU5
 177:Core/Src/main.c ****   while (1)
  52              		.loc 1 177 9 discriminator 1 view .LVU6
  53 0002 FEE7     		b	.L2
  54              		.cfi_endproc
  55              	.LFE146:
  57              		.section	.text.SystemClock_Config,"ax",%progbits
  58              		.align	1
  59              		.global	SystemClock_Config
  60              		.syntax unified
  61              		.thumb
  62              		.thumb_func
  63              		.fpu fpv5-d16
  65              	SystemClock_Config:
  66              	.LFB145:
 112:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 112 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 112
ARM GAS  /tmp/cc7OF7aT.s 			page 9


  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 9DB0     		sub	sp, sp, #116
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 120
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 113 3 view .LVU8
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 113 22 is_stmt 0 view .LVU9
  80 0004 4C22     		movs	r2, #76
  81 0006 0021     		movs	r1, #0
  82 0008 09A8     		add	r0, sp, #36
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 114:Core/Src/main.c **** 
  85              		.loc 1 114 3 is_stmt 1 view .LVU10
 114:Core/Src/main.c **** 
  86              		.loc 1 114 22 is_stmt 0 view .LVU11
  87 000e 2022     		movs	r2, #32
  88 0010 0021     		movs	r1, #0
  89 0012 01A8     		add	r0, sp, #4
  90 0014 FFF7FEFF 		bl	memset
  91              	.LVL1:
 118:Core/Src/main.c **** 
  92              		.loc 1 118 3 is_stmt 1 view .LVU12
  93 0018 0220     		movs	r0, #2
  94 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
  95              	.LVL2:
 123:Core/Src/main.c ****   {
  96              		.loc 1 123 3 view .LVU13
  97              	.L4:
 125:Core/Src/main.c **** 
  98              		.loc 1 125 3 discriminator 1 view .LVU14
 123:Core/Src/main.c ****   {
  99              		.loc 1 123 9 discriminator 1 view .LVU15
 123:Core/Src/main.c ****   {
 100              		.loc 1 123 11 is_stmt 0 discriminator 1 view .LVU16
 101 001e 1B4B     		ldr	r3, .L10
 102 0020 9B69     		ldr	r3, [r3, #24]
 123:Core/Src/main.c ****   {
 103              		.loc 1 123 9 discriminator 1 view .LVU17
 104 0022 13F4005F 		tst	r3, #8192
 105 0026 FAD0     		beq	.L4
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 106              		.loc 1 130 3 is_stmt 1 view .LVU18
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 107              		.loc 1 130 36 is_stmt 0 view .LVU19
 108 0028 0123     		movs	r3, #1
 109 002a 0993     		str	r3, [sp, #36]
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 110              		.loc 1 131 3 is_stmt 1 view .LVU20
 131:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 111              		.loc 1 131 30 is_stmt 0 view .LVU21
 112 002c 4FF48033 		mov	r3, #65536
ARM GAS  /tmp/cc7OF7aT.s 			page 10


 113 0030 0A93     		str	r3, [sp, #40]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 114              		.loc 1 132 3 is_stmt 1 view .LVU22
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 115              		.loc 1 132 34 is_stmt 0 view .LVU23
 116 0032 0223     		movs	r3, #2
 117 0034 1293     		str	r3, [sp, #72]
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 118              		.loc 1 133 3 is_stmt 1 view .LVU24
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 119              		.loc 1 133 35 is_stmt 0 view .LVU25
 120 0036 1393     		str	r3, [sp, #76]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 121              		.loc 1 134 3 is_stmt 1 view .LVU26
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 122              		.loc 1 134 30 is_stmt 0 view .LVU27
 123 0038 0522     		movs	r2, #5
 124 003a 1492     		str	r2, [sp, #80]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 125              		.loc 1 135 3 is_stmt 1 view .LVU28
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 126              		.loc 1 135 30 is_stmt 0 view .LVU29
 127 003c C022     		movs	r2, #192
 128 003e 1592     		str	r2, [sp, #84]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 129              		.loc 1 136 3 is_stmt 1 view .LVU30
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 130              		.loc 1 136 30 is_stmt 0 view .LVU31
 131 0040 1693     		str	r3, [sp, #88]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 132              		.loc 1 137 3 is_stmt 1 view .LVU32
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 133              		.loc 1 137 30 is_stmt 0 view .LVU33
 134 0042 1793     		str	r3, [sp, #92]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 135              		.loc 1 138 3 is_stmt 1 view .LVU34
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 136              		.loc 1 138 30 is_stmt 0 view .LVU35
 137 0044 1893     		str	r3, [sp, #96]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 138              		.loc 1 139 3 is_stmt 1 view .LVU36
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 139              		.loc 1 139 32 is_stmt 0 view .LVU37
 140 0046 0823     		movs	r3, #8
 141 0048 1993     		str	r3, [sp, #100]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 142              		.loc 1 140 3 is_stmt 1 view .LVU38
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 143              		.loc 1 140 35 is_stmt 0 view .LVU39
 144 004a 0023     		movs	r3, #0
 145 004c 1A93     		str	r3, [sp, #104]
 141:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 146              		.loc 1 141 3 is_stmt 1 view .LVU40
 141:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 147              		.loc 1 141 34 is_stmt 0 view .LVU41
 148 004e 1B93     		str	r3, [sp, #108]
 142:Core/Src/main.c ****   {
ARM GAS  /tmp/cc7OF7aT.s 			page 11


 149              		.loc 1 142 3 is_stmt 1 view .LVU42
 142:Core/Src/main.c ****   {
 150              		.loc 1 142 7 is_stmt 0 view .LVU43
 151 0050 09A8     		add	r0, sp, #36
 152 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 153              	.LVL3:
 142:Core/Src/main.c ****   {
 154              		.loc 1 142 6 view .LVU44
 155 0056 A8B9     		cbnz	r0, .L8
 149:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 156              		.loc 1 149 3 is_stmt 1 view .LVU45
 149:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 157              		.loc 1 149 31 is_stmt 0 view .LVU46
 158 0058 3F23     		movs	r3, #63
 159 005a 0193     		str	r3, [sp, #4]
 150:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 160              		.loc 1 150 3 is_stmt 1 view .LVU47
 150:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 161              		.loc 1 150 34 is_stmt 0 view .LVU48
 162 005c 0323     		movs	r3, #3
 163 005e 0293     		str	r3, [sp, #8]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 164              		.loc 1 151 3 is_stmt 1 view .LVU49
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 165              		.loc 1 151 35 is_stmt 0 view .LVU50
 166 0060 0021     		movs	r1, #0
 167 0062 0391     		str	r1, [sp, #12]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 168              		.loc 1 152 3 is_stmt 1 view .LVU51
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 169              		.loc 1 152 35 is_stmt 0 view .LVU52
 170 0064 0823     		movs	r3, #8
 171 0066 0493     		str	r3, [sp, #16]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 172              		.loc 1 153 3 is_stmt 1 view .LVU53
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 173              		.loc 1 153 36 is_stmt 0 view .LVU54
 174 0068 4023     		movs	r3, #64
 175 006a 0593     		str	r3, [sp, #20]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 176              		.loc 1 154 3 is_stmt 1 view .LVU55
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 177              		.loc 1 154 36 is_stmt 0 view .LVU56
 178 006c 0693     		str	r3, [sp, #24]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 179              		.loc 1 155 3 is_stmt 1 view .LVU57
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 180              		.loc 1 155 36 is_stmt 0 view .LVU58
 181 006e 4FF48062 		mov	r2, #1024
 182 0072 0792     		str	r2, [sp, #28]
 156:Core/Src/main.c **** 
 183              		.loc 1 156 3 is_stmt 1 view .LVU59
 156:Core/Src/main.c **** 
 184              		.loc 1 156 36 is_stmt 0 view .LVU60
 185 0074 0893     		str	r3, [sp, #32]
 158:Core/Src/main.c ****   {
 186              		.loc 1 158 3 is_stmt 1 view .LVU61
ARM GAS  /tmp/cc7OF7aT.s 			page 12


 158:Core/Src/main.c ****   {
 187              		.loc 1 158 7 is_stmt 0 view .LVU62
 188 0076 01A8     		add	r0, sp, #4
 189 0078 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 190              	.LVL4:
 158:Core/Src/main.c ****   {
 191              		.loc 1 158 6 view .LVU63
 192 007c 20B9     		cbnz	r0, .L9
 162:Core/Src/main.c **** 
 193              		.loc 1 162 1 view .LVU64
 194 007e 1DB0     		add	sp, sp, #116
 195              	.LCFI2:
 196              		.cfi_remember_state
 197              		.cfi_def_cfa_offset 4
 198              		@ sp needed
 199 0080 5DF804FB 		ldr	pc, [sp], #4
 200              	.L8:
 201              	.LCFI3:
 202              		.cfi_restore_state
 144:Core/Src/main.c ****   }
 203              		.loc 1 144 5 is_stmt 1 view .LVU65
 204 0084 FFF7FEFF 		bl	Error_Handler
 205              	.LVL5:
 206              	.L9:
 160:Core/Src/main.c ****   }
 207              		.loc 1 160 5 view .LVU66
 208 0088 FFF7FEFF 		bl	Error_Handler
 209              	.LVL6:
 210              	.L11:
 211              		.align	2
 212              	.L10:
 213 008c 00480258 		.word	1476544512
 214              		.cfi_endproc
 215              	.LFE145:
 217              		.section	.text.main,"ax",%progbits
 218              		.align	1
 219              		.global	main
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	main:
 226              	.LFB144:
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 227              		.loc 1 65 1 view -0
 228              		.cfi_startproc
 229              		@ Volatile: function does not return.
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 08B5     		push	{r3, lr}
 233              	.LCFI4:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 3, -8
 236              		.cfi_offset 14, -4
  73:Core/Src/main.c **** 
 237              		.loc 1 73 3 view .LVU68
 238 0002 FFF7FEFF 		bl	HAL_Init
ARM GAS  /tmp/cc7OF7aT.s 			page 13


 239              	.LVL7:
  80:Core/Src/main.c **** 
 240              		.loc 1 80 3 view .LVU69
 241 0006 FFF7FEFF 		bl	SystemClock_Config
 242              	.LVL8:
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 243              		.loc 1 87 3 view .LVU70
 244 000a FFF7FEFF 		bl	MX_GPIO_Init
 245              	.LVL9:
 246              	.L13:
  94:Core/Src/main.c ****   {
 247              		.loc 1 94 3 discriminator 1 view .LVU71
  99:Core/Src/main.c ****     HAL_Delay(100);
 248              		.loc 1 99 5 discriminator 1 view .LVU72
  99:Core/Src/main.c ****     HAL_Delay(100);
 249              		.loc 1 99 16 is_stmt 0 discriminator 1 view .LVU73
 250 000e 084A     		ldr	r2, .L15
 251 0010 5369     		ldr	r3, [r2, #20]
 252 0012 83F40043 		eor	r3, r3, #32768
 253 0016 5361     		str	r3, [r2, #20]
 100:Core/Src/main.c ****     GPIOI->ODR ^= GPIO_PIN_8;
 254              		.loc 1 100 5 is_stmt 1 discriminator 1 view .LVU74
 255 0018 6420     		movs	r0, #100
 256 001a FFF7FEFF 		bl	HAL_Delay
 257              	.LVL10:
 101:Core/Src/main.c ****     HAL_Delay(100);
 258              		.loc 1 101 5 discriminator 1 view .LVU75
 101:Core/Src/main.c ****     HAL_Delay(100);
 259              		.loc 1 101 16 is_stmt 0 discriminator 1 view .LVU76
 260 001e 054A     		ldr	r2, .L15+4
 261 0020 5369     		ldr	r3, [r2, #20]
 262 0022 83F48073 		eor	r3, r3, #256
 263 0026 5361     		str	r3, [r2, #20]
 102:Core/Src/main.c ****   }
 264              		.loc 1 102 5 is_stmt 1 discriminator 1 view .LVU77
 265 0028 6420     		movs	r0, #100
 266 002a FFF7FEFF 		bl	HAL_Delay
 267              	.LVL11:
  94:Core/Src/main.c ****   {
 268              		.loc 1 94 9 discriminator 1 view .LVU78
 269 002e EEE7     		b	.L13
 270              	.L16:
 271              		.align	2
 272              	.L15:
 273 0030 00080258 		.word	1476528128
 274 0034 00200258 		.word	1476534272
 275              		.cfi_endproc
 276              	.LFE144:
 278              		.text
 279              	.Letext0:
 280              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 281              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h750xx.h"
 282              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 283              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 284              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 285              		.file 8 "Core/Inc/gpio.h"
 286              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
ARM GAS  /tmp/cc7OF7aT.s 			page 14


 287              		.file 10 "<built-in>"
ARM GAS  /tmp/cc7OF7aT.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc7OF7aT.s:17     .text.Error_Handler:0000000000000000 $t
     /tmp/cc7OF7aT.s:25     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc7OF7aT.s:58     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc7OF7aT.s:65     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc7OF7aT.s:213    .text.SystemClock_Config:000000000000008c $d
     /tmp/cc7OF7aT.s:218    .text.main:0000000000000000 $t
     /tmp/cc7OF7aT.s:225    .text.main:0000000000000000 main
     /tmp/cc7OF7aT.s:273    .text.main:0000000000000030 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
HAL_Delay
